{"remainingRequest":"/home/nithin/Desktop/app123/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nithin/Desktop/app123/client/src/views/Myposts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/nithin/Desktop/app123/client/src/views/Myposts.vue","mtime":1585565157824},{"path":"/home/nithin/Desktop/app123/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nithin/Desktop/app123/client/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nithin/Desktop/app123/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nithin/Desktop/app123/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nithin/Desktop/app123/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBQb3N0c1NlcnZpY2UgZnJvbSAnLi4vV2FyZWhvdXNlL1Bvc3RzU2VydmljZSc7Ci8vaW1wb3J0IHN0b3JlIGZyb20gJy4uL3N0b3JlJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdwb3N0cycsCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgICBwb3N0czogW10sCiAgICB9CiAgfSwKICBtb3VudGVkICgpIHsKICAgIHRoaXMuZ2V0UG9zdHMoKQogIH0sCiAgbWV0aG9kczogewogICAgYXN5bmMgZ2V0UG9zdHMgKCkgewogICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IFBvc3RzU2VydmljZS5teVBvc3RzKHtpZDogdGhpcy4kcm91dGUucGFyYW1zLmlkfSkKICAgICAgdGhpcy5wb3N0cyA9IHJlc3BvbnNlLmRhdGEucG9zdHMKICAgIH0sCiAgICBhc3luYyBkZWxldGVQb3N0IChpZCkgewogICAgICBQb3N0c1NlcnZpY2UuZGVsZXRlUG9zdChpZCkKICAgICAgdGhpcy5nZXRQb3N0cygpCiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgbmFtZTogJ3Bvc3RzJyB9KQogICAgfQogIH0KfQo="},{"version":3,"sources":["Myposts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Myposts.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"posts\">\n    <h1>POSTS</h1>\n    <div v-if=\"posts.length > 0\" class=\"table-wrap\">\n      <div dir=\"rtl\">\n        <router-link v-bind:to=\"{ name: 'addpost' }\" class=\"\"><button type=\"button\" class=\"btn btn-success\">Add Post</button></router-link>\n      </div>\n    <br>\n    <div class=\"card\" v-for=\"post in posts\" v-bind:key=\"post._id\">\n      <div class=\"card-body\">\n        <h2 class=\"card-title\">{{ post.title }}</h2>\n        <h5 class=\"card-text\">{{ post.content }}</h5>\n        <router-link v-bind:to=\"{ name: 'editpost', params: { id: post._id } }\"><button type=\"button\" class=\"btn btn-primary\">EDIT POST</button></router-link> &nbsp;&nbsp;&nbsp;&nbsp;\n        <a href=\"#\" @click=\"deletePost(post._id)\"><button type=\"button\" class=\"btn btn-danger\">DELETE</button></a>\n      </div>\n    </div>\n    <br>\n    </div>\n    <div v-else>\n      There are no posts.. Lets add one now <br /><br />\n      <router-link v-bind:to=\"{ name: 'addpost' }\" class=\"add_post_link\"><button type=\"button\" class=\"btn btn-success\">Add Post</button></router-link>\n    </div>\n  </div>\n</template>\n\n<script>\nimport PostsService from '../Warehouse/PostsService';\n//import store from '../store';\nexport default {\n  name: 'posts',\n  data () {\n    return {\n      posts: [],\n    }\n  },\n  mounted () {\n    this.getPosts()\n  },\n  methods: {\n    async getPosts () {\n      const response = await PostsService.myPosts({id: this.$route.params.id})\n      this.posts = response.data.posts\n    },\n    async deletePost (id) {\n      PostsService.deletePost(id)\n      this.getPosts()\n      this.$router.push({ name: 'posts' })\n    }\n  }\n}\n</script>\n<style type=\"text/css\" scoped>\n\n\n</style>"]}]}