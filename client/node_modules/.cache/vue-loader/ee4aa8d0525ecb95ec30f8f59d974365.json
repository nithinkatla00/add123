{"remainingRequest":"/home/nithin/Desktop/posts/client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/nithin/Desktop/posts/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/nithin/Desktop/posts/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nithin/Desktop/posts/client/src/views/Register.vue?vue&type=template&id=63ae9146&","dependencies":[{"path":"/home/nithin/Desktop/posts/client/src/views/Register.vue","mtime":1585288129987},{"path":"/home/nithin/Desktop/posts/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nithin/Desktop/posts/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/nithin/Desktop/posts/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nithin/Desktop/posts/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}