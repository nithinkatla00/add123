{"remainingRequest":"/home/nithin/Desktop/add123/client/node_modules/babel-loader/lib/index.js!/home/nithin/Desktop/add123/client/node_modules/eslint-loader/index.js??ref--13-0!/home/nithin/Desktop/add123/client/src/Warehouse/Auth.js","dependencies":[{"path":"/home/nithin/Desktop/add123/client/src/Warehouse/Auth.js","mtime":1585664626911},{"path":"/home/nithin/Desktop/add123/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nithin/Desktop/add123/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nithin/Desktop/add123/client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvbml0aGluL0Rlc2t0b3AvYWRkMTIzL2NsaWVudC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCByb3V0ZXIgZnJvbSAnLi4vcm91dGVyJzsKdmFyIHN0YXRlID0gewogIHRva2VuOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndG9rZW4nKSB8fCAnJywKICB1c2VyOiB7fSwKICBzdGF0dXM6ICcnLAogIGVycm9yOiBudWxsCn07CnZhciBnZXR0ZXJzID0gewogIC8vIGlzTG9nZ2VkSW46IGZ1bmN0aW9uIChzdGF0ZSkgewogIC8vICAgICBpZiAoc3RhdGUudG9rZW4gIT0gJycpIHsKICAvLyAgICAgICAgIHJldHVybiB0cnVlCiAgLy8gICAgIH0gZWxzZSB7CiAgLy8gICAgICAgICByZXR1cm4gZmFsc2UKICAvLyAgICAgfQogIC8vIH0KICBpc0xvZ2dlZEluOiBmdW5jdGlvbiBpc0xvZ2dlZEluKHN0YXRlKSB7CiAgICByZXR1cm4gISFzdGF0ZS50b2tlbjsKICB9LAogIGF1dGhTdGF0ZTogZnVuY3Rpb24gYXV0aFN0YXRlKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUuc3RhdHVzOwogIH0sCiAgdXNlcjogZnVuY3Rpb24gdXNlcihzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLnVzZXI7CiAgfSwKICBlcnJvcjogZnVuY3Rpb24gZXJyb3Ioc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5lcnJvcjsKICB9Cn07CnZhciBhY3Rpb25zID0gewogIC8vIExvZ2luIEFjdGlvbgogIGxvZ2luOiBmdW5jdGlvbiBsb2dpbihfcmVmLCB1c2VyKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgY29tbWl0LCByZXMsIHRva2VuLCBfdXNlcjsKCiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgICAgICAgICBjb21taXQoJ2F1dGhfcmVxdWVzdCcpOwogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAyOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5wb3N0KCcvdXNlcnMvbG9naW4nLCB1c2VyKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICByZXMgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICBpZiAocmVzLmRhdGEuc3VjY2VzcykgewogICAgICAgICAgICAgICAgdG9rZW4gPSByZXMuZGF0YS50b2tlbjsKICAgICAgICAgICAgICAgIF91c2VyID0gcmVzLmRhdGEudXNlcjsgLy8gU3RvcmUgdGhlIHRva2VuIGludG8gdGhlIGxvY2Fsc3RvcmFnZQoKICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd0b2tlbicsIHRva2VuKTsgLy8gU2V0IHRoZSBheGlvcyBkZWZhdWx0cwoKICAgICAgICAgICAgICAgIGF4aW9zLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uWydBdXRob3JpemF0aW9uJ10gPSB0b2tlbjsKICAgICAgICAgICAgICAgIGNvbW1pdCgnYXV0aF9zdWNjZXNzJywgdG9rZW4sIF91c2VyKTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHJlcyk7CgogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMDsKICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDIpOwogICAgICAgICAgICAgIGNvbW1pdCgnYXV0aF9lcnJvcicsIF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMiwgMTBdXSk7CiAgICB9KSkoKTsKICB9LAogIC8vIFJlZ2lzdGVyIFVzZXIKICByZWdpc3RlcjogZnVuY3Rpb24gcmVnaXN0ZXIoX3JlZjIsIHVzZXJEYXRhKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgdmFyIGNvbW1pdCwgcmVzOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDE7CiAgICAgICAgICAgICAgY29tbWl0KCdyZWdpc3Rlcl9yZXF1ZXN0Jyk7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5wb3N0KCcvdXNlcnMvcmVnaXN0ZXInLCB1c2VyRGF0YSk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQyLnNlbnQ7CgogICAgICAgICAgICAgIGlmIChyZXMuZGF0YS5zdWNjZXNzICE9PSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgICAgIGNvbW1pdCgncmVnaXN0ZXJfc3VjY2VzcycpOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIHJlcyk7CgogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMTA7CiAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDEpOwogICAgICAgICAgICAgIGNvbW1pdCgncmVnaXN0ZXJfZXJyb3InLCBfY29udGV4dDIudDApOwoKICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyLCBudWxsLCBbWzEsIDEwXV0pOwogICAgfSkpKCk7CiAgfSwKICAvLyBHZXQgdGhlIHVzZXIgUHJvZmlsZQogIGdldFByb2ZpbGU6IGZ1bmN0aW9uIGdldFByb2ZpbGUoX3JlZjMpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICB2YXIgY29tbWl0LCByZXM7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgICAgICAgICAgIGNvbW1pdCgncHJvZmlsZV9yZXF1ZXN0Jyk7CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA0OwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoJy91c2Vycy9wcm9maWxlJyk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgY29tbWl0KCd1c2VyX3Byb2ZpbGUnLCByZXMuZGF0YS51c2VyKTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgcmVzKTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUzKTsKICAgIH0pKSgpOwogIH0sCiAgLy8gTG9nb3V0IHRoZSB1c2VyCiAgbG9nb3V0OiBmdW5jdGlvbiBsb2dvdXQoX3JlZjQpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICB2YXIgY29tbWl0OwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY0LmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCd0b2tlbicpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIGNvbW1pdCgnbG9nb3V0Jyk7CiAgICAgICAgICAgICAgZGVsZXRlIGF4aW9zLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uWydBdXRob3JpemF0aW9uJ107CiAgICAgICAgICAgICAgcm91dGVyLnB1c2goJy9sb2dpbicpOwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuYWJydXB0KCJyZXR1cm4iKTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU0KTsKICAgIH0pKSgpOwogIH0KfTsKdmFyIG11dGF0aW9ucyA9IHsKICBhdXRoX3JlcXVlc3Q6IGZ1bmN0aW9uIGF1dGhfcmVxdWVzdChzdGF0ZSkgewogICAgc3RhdGUuZXJyb3IgPSBudWxsOwogICAgc3RhdGUuc3RhdHVzID0gJ2xvYWRpbmcnOwogIH0sCiAgYXV0aF9zdWNjZXNzOiBmdW5jdGlvbiBhdXRoX3N1Y2Nlc3Moc3RhdGUsIHRva2VuLCB1c2VyKSB7CiAgICBzdGF0ZS50b2tlbiA9IHRva2VuOwogICAgc3RhdGUudXNlciA9IHVzZXI7CiAgICBzdGF0ZS5zdGF0dXMgPSAnc3VjY2Vzcyc7CiAgICBzdGF0ZS5lcnJvciA9IG51bGw7CiAgfSwKICBhdXRoX2Vycm9yOiBmdW5jdGlvbiBhdXRoX2Vycm9yKHN0YXRlLCBlcnIpIHsKICAgIHN0YXRlLmVycm9yID0gZXJyLnJlc3BvbnNlLmRhdGEubXNnOwogIH0sCiAgcmVnaXN0ZXJfcmVxdWVzdDogZnVuY3Rpb24gcmVnaXN0ZXJfcmVxdWVzdChzdGF0ZSkgewogICAgc3RhdGUuZXJyb3IgPSBudWxsOwogICAgc3RhdGUuc3RhdHVzID0gJ2xvYWRpbmcnOwogIH0sCiAgcmVnaXN0ZXJfc3VjY2VzczogZnVuY3Rpb24gcmVnaXN0ZXJfc3VjY2VzcyhzdGF0ZSkgewogICAgc3RhdGUuZXJyb3IgPSBudWxsOwogICAgc3RhdGUuc3RhdHVzID0gJ3N1Y2Nlc3MnOwogIH0sCiAgcmVnaXN0ZXJfZXJyb3I6IGZ1bmN0aW9uIHJlZ2lzdGVyX2Vycm9yKHN0YXRlLCBlcnIpIHsKICAgIHN0YXRlLmVycm9yID0gZXJyLnJlc3BvbnNlLmRhdGEubXNnOwogIH0sCiAgbG9nb3V0OiBmdW5jdGlvbiBsb2dvdXQoc3RhdGUpIHsKICAgIHN0YXRlLmVycm9yID0gbnVsbDsKICAgIHN0YXRlLnN0YXR1cyA9ICcnOwogICAgc3RhdGUudG9rZW4gPSAnJzsKICAgIHN0YXRlLnVzZXIgPSAnJzsKICB9LAogIHByb2ZpbGVfcmVxdWVzdDogZnVuY3Rpb24gcHJvZmlsZV9yZXF1ZXN0KHN0YXRlKSB7CiAgICBzdGF0ZS5zdGF0dXMgPSAnbG9hZGluZyc7CiAgfSwKICB1c2VyX3Byb2ZpbGU6IGZ1bmN0aW9uIHVzZXJfcHJvZmlsZShzdGF0ZSwgdXNlcikgewogICAgc3RhdGUudXNlciA9IHVzZXI7CiAgfQp9OwpleHBvcnQgZGVmYXVsdCB7CiAgc3RhdGU6IHN0YXRlLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMsCiAgZ2V0dGVyczogZ2V0dGVycwp9Ow=="},{"version":3,"sources":["/home/nithin/Desktop/add123/client/src/Warehouse/Auth.js"],"names":["axios","router","state","token","localStorage","getItem","user","status","error","getters","isLoggedIn","authState","actions","login","commit","post","res","data","success","setItem","defaults","headers","common","register","userData","undefined","getProfile","get","logout","removeItem","push","mutations","auth_request","auth_success","auth_error","err","response","msg","register_request","register_success","register_error","profile_request","user_profile"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,EAD9B;AAEVC,EAAAA,IAAI,EAAE,EAFI;AAGVC,EAAAA,MAAM,EAAE,EAHE;AAIVC,EAAAA,KAAK,EAAE;AAJG,CAAd;AAOA,IAAMC,OAAO,GAAG;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,UAAU,EAAE,oBAAAR,KAAK;AAAA,WAAI,CAAC,CAACA,KAAK,CAACC,KAAZ;AAAA,GARL;AASZQ,EAAAA,SAAS,EAAE,mBAAAT,KAAK;AAAA,WAAIA,KAAK,CAACK,MAAV;AAAA,GATJ;AAUZD,EAAAA,IAAI,EAAE,cAAAJ,KAAK;AAAA,WAAIA,KAAK,CAACI,IAAV;AAAA,GAVC;AAWZE,EAAAA,KAAK,EAAE,eAAAN,KAAK;AAAA,WAAIA,KAAK,CAACM,KAAV;AAAA;AAXA,CAAhB;AAcA,IAAMI,OAAO,GAAG;AACZ;AACMC,EAAAA,KAFM,uBAITP,IAJS,EAIH;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AADLQ,cAAAA,MACK,QADLA,MACK;AACLA,cAAAA,MAAM,CAAC,cAAD,CAAN;AADK;AAAA;AAAA,qBAGed,KAAK,CAACe,IAAN,CAAW,cAAX,EAA2BT,IAA3B,CAHf;;AAAA;AAGGU,cAAAA,GAHH;;AAID,kBAAIA,GAAG,CAACC,IAAJ,CAASC,OAAb,EAAsB;AACZf,gBAAAA,KADY,GACJa,GAAG,CAACC,IAAJ,CAASd,KADL;AAEZG,gBAAAA,KAFY,GAELU,GAAG,CAACC,IAAJ,CAASX,IAFJ,EAGlB;;AACAF,gBAAAA,YAAY,CAACe,OAAb,CAAqB,OAArB,EAA8BhB,KAA9B,EAJkB,CAKlB;;AACAH,gBAAAA,KAAK,CAACoB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDnB,KAAjD;AACAW,gBAAAA,MAAM,CAAC,cAAD,EAAiBX,KAAjB,EAAwBG,KAAxB,CAAN;AACH;;AAZA,+CAaMU,GAbN;;AAAA;AAAA;AAAA;AAeDF,cAAAA,MAAM,CAAC,YAAD,cAAN;;AAfC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBR,GArBW;AAsBZ;AACMS,EAAAA,QAvBM,2BAyBTC,QAzBS,EAyBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADTV,cAAAA,MACS,SADTA,MACS;AAAA;AAELA,cAAAA,MAAM,CAAC,kBAAD,CAAN;AAFK;AAAA,qBAGWd,KAAK,CAACe,IAAN,CAAW,iBAAX,EAA8BS,QAA9B,CAHX;;AAAA;AAGDR,cAAAA,GAHC;;AAIL,kBAAIA,GAAG,CAACC,IAAJ,CAASC,OAAT,KAAqBO,SAAzB,EAAoC;AAChCX,gBAAAA,MAAM,CAAC,kBAAD,CAAN;AACH;;AANI,gDAOEE,GAPF;;AAAA;AAAA;AAAA;AASLF,cAAAA,MAAM,CAAC,gBAAD,eAAN;;AATK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWZ,GApCW;AAqCZ;AACMY,EAAAA,UAtCM,6BAwCT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADCZ,cAAAA,MACD,SADCA,MACD;AACCA,cAAAA,MAAM,CAAC,iBAAD,CAAN;AADD;AAAA,qBAEiBd,KAAK,CAAC2B,GAAN,CAAU,gBAAV,CAFjB;;AAAA;AAEKX,cAAAA,GAFL;AAGCF,cAAAA,MAAM,CAAC,cAAD,EAAiBE,GAAG,CAACC,IAAJ,CAASX,IAA1B,CAAN;AAHD,gDAIQU,GAJR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKF,GA7CW;AA8CZ;AACMY,EAAAA,MA/CM,yBAiDT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADCd,cAAAA,MACD,SADCA,MACD;AAAA;AAAA,qBACOV,YAAY,CAACyB,UAAb,CAAwB,OAAxB,CADP;;AAAA;AAECf,cAAAA,MAAM,CAAC,QAAD,CAAN;AACA,qBAAOd,KAAK,CAACoB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,CAAP;AACArB,cAAAA,MAAM,CAAC6B,IAAP,CAAY,QAAZ;AAJD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMF;AAvDW,CAAhB;AA0DA,IAAMC,SAAS,GAAG;AACdC,EAAAA,YADc,wBACD9B,KADC,EACM;AAChBA,IAAAA,KAAK,CAACM,KAAN,GAAc,IAAd;AACAN,IAAAA,KAAK,CAACK,MAAN,GAAe,SAAf;AACH,GAJa;AAKd0B,EAAAA,YALc,wBAKD/B,KALC,EAKMC,KALN,EAKaG,IALb,EAKmB;AAC7BJ,IAAAA,KAAK,CAACC,KAAN,GAAcA,KAAd;AACAD,IAAAA,KAAK,CAACI,IAAN,GAAaA,IAAb;AACAJ,IAAAA,KAAK,CAACK,MAAN,GAAe,SAAf;AACAL,IAAAA,KAAK,CAACM,KAAN,GAAc,IAAd;AACH,GAVa;AAWd0B,EAAAA,UAXc,sBAWHhC,KAXG,EAWGiC,GAXH,EAWO;AACjBjC,IAAAA,KAAK,CAACM,KAAN,GAAc2B,GAAG,CAACC,QAAJ,CAAanB,IAAb,CAAkBoB,GAAhC;AACH,GAba;AAcdC,EAAAA,gBAdc,4BAcGpC,KAdH,EAcU;AACpBA,IAAAA,KAAK,CAACM,KAAN,GAAc,IAAd;AACAN,IAAAA,KAAK,CAACK,MAAN,GAAe,SAAf;AACH,GAjBa;AAkBdgC,EAAAA,gBAlBc,4BAkBGrC,KAlBH,EAkBU;AACpBA,IAAAA,KAAK,CAACM,KAAN,GAAc,IAAd;AACAN,IAAAA,KAAK,CAACK,MAAN,GAAe,SAAf;AACH,GArBa;AAsBdiC,EAAAA,cAtBc,0BAsBCtC,KAtBD,EAsBQiC,GAtBR,EAsBa;AACvBjC,IAAAA,KAAK,CAACM,KAAN,GAAc2B,GAAG,CAACC,QAAJ,CAAanB,IAAb,CAAkBoB,GAAhC;AACH,GAxBa;AAyBdT,EAAAA,MAzBc,kBAyBP1B,KAzBO,EAyBA;AACVA,IAAAA,KAAK,CAACM,KAAN,GAAc,IAAd;AACAN,IAAAA,KAAK,CAACK,MAAN,GAAe,EAAf;AACAL,IAAAA,KAAK,CAACC,KAAN,GAAc,EAAd;AACAD,IAAAA,KAAK,CAACI,IAAN,GAAa,EAAb;AACH,GA9Ba;AA+BdmC,EAAAA,eA/Bc,2BA+BEvC,KA/BF,EA+BS;AACnBA,IAAAA,KAAK,CAACK,MAAN,GAAe,SAAf;AACH,GAjCa;AAkCdmC,EAAAA,YAlCc,wBAkCDxC,KAlCC,EAkCMI,IAlCN,EAkCY;AACtBJ,IAAAA,KAAK,CAACI,IAAN,GAAaA,IAAb;AACH;AApCa,CAAlB;AAuCA,eAAe;AACXJ,EAAAA,KAAK,EAALA,KADW;AAEXU,EAAAA,OAAO,EAAPA,OAFW;AAGXmB,EAAAA,SAAS,EAATA,SAHW;AAIXtB,EAAAA,OAAO,EAAPA;AAJW,CAAf","sourcesContent":["import axios from 'axios';\nimport router from '../router';\n\nconst state = {\n    token: localStorage.getItem('token') || '',\n    user: {},\n    status: '',\n    error: null\n};\n\nconst getters = {\n    // isLoggedIn: function (state) {\n    //     if (state.token != '') {\n    //         return true\n    //     } else {\n    //         return false\n    //     }\n    // }\n    isLoggedIn: state => !!state.token,\n    authState: state => state.status,\n    user: state => state.user,\n    error: state => state.error\n};\n\nconst actions = {\n    // Login Action\n    async login({\n        commit\n    }, user) {\n        commit('auth_request');\n        try {\n            let res = await axios.post('/users/login', user)\n            if (res.data.success) {\n                const token = res.data.token;\n                const user = res.data.user;\n                // Store the token into the localstorage\n                localStorage.setItem('token', token);\n                // Set the axios defaults\n                axios.defaults.headers.common['Authorization'] = token;\n                commit('auth_success', token, user);\n            }\n            return res;\n        } catch (err) {\n            commit('auth_error', err);\n        }\n    },\n    // Register User\n    async register({\n        commit\n    }, userData) {\n        try {\n            commit('register_request');\n            let res = await axios.post('/users/register', userData);\n            if (res.data.success !== undefined) {\n                commit('register_success');\n            }\n            return res;\n        } catch (err) {\n            commit('register_error', err)\n        }\n    },\n    // Get the user Profile\n    async getProfile({\n        commit\n    }) {\n        commit('profile_request');\n        let res = await axios.get('/users/profile')\n        commit('user_profile', res.data.user)\n        return res;\n    },\n    // Logout the user\n    async logout({\n        commit\n    }) {\n        await localStorage.removeItem('token');\n        commit('logout');\n        delete axios.defaults.headers.common['Authorization'];\n        router.push('/login');\n        return\n    }\n};\n\nconst mutations = {\n    auth_request(state) {\n        state.error = null\n        state.status = 'loading'\n    },\n    auth_success(state, token, user) {\n        state.token = token\n        state.user = user\n        state.status = 'success'\n        state.error = null\n    },\n    auth_error(state,err){\n        state.error = err.response.data.msg\n    },\n    register_request(state) {\n        state.error = null\n        state.status = 'loading'\n    },\n    register_success(state) {\n        state.error = null\n        state.status = 'success'\n    },\n    register_error(state, err) {\n        state.error = err.response.data.msg\n    },\n    logout(state) {\n        state.error = null\n        state.status = ''\n        state.token = ''\n        state.user = ''\n    },\n    profile_request(state) {\n        state.status = 'loading'\n    },\n    user_profile(state, user) {\n        state.user = user\n    }\n};\n\nexport default {\n    state,\n    actions,\n    mutations,\n    getters\n};"]}]}